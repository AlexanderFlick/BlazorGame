@page "/save"
@using Game.Data;
@using Game.Data.Save;
@using Game.Pages.Components
@using Game.Services;
@inject ISaveService SaveService
@inject NavigationManager NavigationManager

<div>
    <EditForm Model="@saveFile" OnSubmit="@HandleSubmit">
        @if (successfulSave)
        {
            <br />
            <p>Successfully saved!!!</p>
            <br />
        }

        @if (successfulLoad)
        {
            <br />
            <p>Successfully loaded your previous save!!!</p>
            <br />
        }

        <label>
            Save
            <InputCheckbox @bind-Value="@saveFile.Saving"></InputCheckbox>
        </label>
        <br />
        <label style="float:left;">
            Load
            <InputCheckbox @bind-Value="@saveFile.Loading"></InputCheckbox>
        </label>
        <br />
        <button type="submit">Submit</button>
    </EditForm>
    <br />
    <BackButton />
</div>

@code {
    [CascadingParameter]
    public Player player { get; set; }

    private bool successfulSave { get; set; }
    private bool successfulLoad { get; set; }

    private SaveFile saveFile = new();

    public void HandleSubmit()
    {
        if (saveFile.Saving)
        {
            SaveService.Save(player, saveFile.Path);
            successfulSave = true;
        }

        if (saveFile.Loading)
        {
            var person = SaveService.Load(saveFile.Path);
            player.Amber = person.Amber;
            player.Dinosaurs = person.Dinosaurs;
            player.Name = person.Name;
            player.Fossils = person.Fossils;
            player.Access = person.Access;

            successfulLoad = true;
        }
    }
}