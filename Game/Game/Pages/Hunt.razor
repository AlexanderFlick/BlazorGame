@page "/hunt"
@using Game.Data;
@using Game.Services;
@inject IPlayerMonsterService MonsterService
@inject IGoldService GoldService
@inject NavigationManager NavigationManager

<div style="text-align:center">
    <h3><b>Hunt For Monsters</b></h3>
    @if (!HasEnough)
    {
        <div class="alert alert-danger" role="alert">
            Go earn more gold to buy new Monsters!
            <button class="btn btn-danger" @onclick="RedirectToGold">Go Get More Gold</button>
        </div>
    }
    <p>Current Gold: @player.Amber</p>
    <p>Gold Needed to Hunt for New Monsters: @player.AmberPerMonster</p>
    <p>Current Monster Count: @player.Monsters.Count()/@player.MaxPartySize</p>    
    <button class="btn btn-primary" @onclick="GetNewMonster">Get New Monster</button>
    
</div>

@code {
    [CascadingParameter]
    public Player player { get; set; }

    public bool HasEnough { get; set; } = true;

    private void GetNewMonster()
    {
        var enoughGold = GoldService.HasEnough(player, player.AmberPerMonster);
        if (enoughGold)
        {
            HasEnough = true;
            player.Amber = GoldService.Pay(player.AmberPerMonster, player.Amber);
            player = MonsterService.HuntForMonster(player);
        }
        else
        {
            HasEnough = false;

        }
    }

    private void RedirectToGold()
    {
        NavigationManager.NavigateTo("/gold");
    }
}
