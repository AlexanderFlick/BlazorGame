@page "/party/summary/{dinosaurIndex}/moves"
@using Game.Data;
@using Game.Data.Dinosaurs;
@using Game.Data.Dinosaurs.DinosaurMoves;
@using Game.Pages.Components
@inject NavigationManager NavigationManager

<div>
    <h1>Moves</h1>
    <br />
    @foreach (var move in dinosaurSummary.Moves)
    {
        @if (move.MoveType == MoveType.Offensive)
        {
            <div style="outline:double;">
                <p>@move.Name : @move.MoveType</p>
                <p>Attack: @move.DiceCount d @move.DiceSize</p>
            </div>
        }

        @if (move.MoveType == MoveType.Defensive)
        {
            <div style="outline:double;">
                <p>@move.Name : @move.MoveType</p>
                <p>Base Defense Increase: @move.DiceCount d @move.DiceSize</p>
            </div>
        }
    }
    <button class="btn btn-primary" @onclick="() => NavigateToSummary(pageIndex)" value="@pageIndex">Back to Summary</button>
    <BackButton />
</div>


@code {
    [CascadingParameter]
    public Player player { get; set; }

    [Parameter]
    public string dinosaurIndex { get; set; }
    public int pageIndex { get; set; }

    private Dinosaur dinosaurSummary = new Dinosaur();

    protected override async Task OnInitializedAsync()
    {
        pageIndex = int.Parse(dinosaurIndex);
        dinosaurSummary = player.Dinosaurs.Where(x => x.PartyPosition == pageIndex).First();
    }

    public void NavigateToSummary(int dinosaurIndex)
    {
        NavigationManager.NavigateTo($"/party/summary/{dinosaurIndex}");
    }
}
