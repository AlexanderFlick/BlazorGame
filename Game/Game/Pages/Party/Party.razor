@page "/party"
@using Game.Data;
@using Game.Data.Dinosaurs;
@using Game.Pages.Components
@using Game.Pages.Components.DinosaurComponents
@using Game.Services;
@inject IPlayerDinosaurService PlayerDinosaurService
@inject IDinosaurService DinosaurService
@inject NavigationManager NavigationManager

@*<h1><b>Dinosaur Army</b></h1>
<p>Party size: @player.Dinosaurs.Count()/@player.MaxPartySize</p>
<br />
<div style="text-align:center; float:left; margin:10px;">
    @foreach (var dinosaur in player.Dinosaurs)
    {
        <div class="card" style="width: 18rem; float:left;">
            <div class="card-body">
                <DinosaurBaseInfo Dinosaur="dinosaur" />
                <button class="btn btn-primary" @onclick="() => RedirectToSummary(dinosaur)">Detailed Summary</button>
                <button class="btn btn-primary" @onclick="() => LockDinosaur(dinosaur)" value="@dinosaur">Lock</button>
                <br>
                <button class="btn btn-danger" style="margin-top:10px;" @onclick="() => RemoveDinosaur(dinosaur)">Remove</button>

            </div>
        </div>
    }
    <br />
    <BackButton />
</div>*@

<div>
    <div class="container">
        @foreach (var dino in player.Dinosaurs)
        {
            <div class="card">
                <DinosaurName dinosaurToName="dino" />
                <div class="thing">
                    <div class="fa">
                        <DinosaurBaseInfo Dinosaur="dino" />
                        <DinosaurBattleStats dinoForBattle="dino" />
                    </div>
                </div>
            </div>
        }
        <BackButton />
    </div>
</div>


@code {
    [CascadingParameter]
    public Player player { get; set; }

    public void LockDinosaur(Dinosaur dinosaur)
    {
        dinosaur = DinosaurService.LockOrUnlockDinosaur(dinosaur);
    }

    public void RemoveDinosaur(Dinosaur dinosaur)
    {
        player = PlayerDinosaurService.RemoveDinosaur(player, dinosaur);
    }

    public void RedirectToSummary(Dinosaur dinosaur)
    {
        NavigationManager.NavigateTo($"/party/summary/{dinosaur.PartyPosition}");
    }
}

<style>
    .container {
        height: 100vh;
        width: 100vw;
        min-height: 600px;
        min-width: 1000px;
        display: flex;
        justify-content: space-around;
        align-items: center;
        margin: 10px auto;
        background: url('../../images/placeholders/background.png');
        background-size: 100% 100%;
    }

    .card {
        height: 470px;
        width: 350px;
        float: left;
        margin: 40px;
        box-shadow: 0 70px 63px -60px #000000;
        border-radius: 50px;
        margin: 0 auto;
        text-align: center;
        border-color: black;
        border: 3px solid;
        background: url('../../images/placeholders/raptor.png')
    }

    .thing {
        height: fit-content;
        width: 329px;
        opacity: 0;
        border: 2px solid;
        border-radius: 50px;
        margin-left: 8px;
        align-content: center;
        text-align: center;
        background-color: lightgray;
        transition-duration: 0.8s;
    }

        .thing:hover {
            opacity: 1;
            transition-duration: 0.5s;
        }

    .fa {
        opacity: 0;
        text-align: center;
        transition-duration: 1s;
        margin: 20px;
    }

        .fa:hover {
            opacity: 1;
            transition-duration: 2s;
        }

    .buttonChange {
        background-image: url(../../images/placeholders/backbuttonstyle3wideUNSELECTED.png)
    }

    .buttonChange:hover{
            background-image: url(../../images/placeholders/backbuttonstyle3wide.png)
    }
</style>