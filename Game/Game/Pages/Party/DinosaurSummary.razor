@page "/party/summary/{partyPosition}"
@using Game.Data;
@using Game.Data.Dinosaurs;
@using Game.Pages.Components
@using Game.Pages.Components.Buttons
@using Game.Pages.Components.DinosaurComponents
@inject NavigationManager NavigationManager

<div>
    <DinosaurName dinosaurToName="dinosaur" />
    <DinosaurBaseInfo Dinosaur="dinosaur"/>    
    <DinosaurMoves DinoMoves="dinosaur.Moves" />

    <RedirectButton ButtonParameter=@index.ToString() ButtonPath="/party/summary/" ButtonPathContinued="/items" ButtonText="Items"/>
    <br />
    <RedirectButton ButtonPath="/party" ButtonText="Back to Party" />
    <br />
    <div @onclick="RenameDinosaur">
        <ActionButton ButtonText="Rename"/>
    </div>
    
    @if (wantsToRename)
    {
        <div>
            <input @bind=@dinosaur.PetName>
        </div>
    }
    <br />
    <RedirectButton ButtonPath="/" ButtonText="HOME" />
</div>


@code {
    [CascadingParameter]
    public Player player { get; set; }

    [Parameter]
    public string partyPosition { get; set; }

    private Dinosaur dinosaur { get; set; }

    public int index { get; set; }
    public bool wantsToRename = false;

    protected override async Task OnInitializedAsync()
    {
        index = int.Parse(partyPosition);
        dinosaur = player.Dinosaurs.Where(x => x.PartyPosition == index).First();
    }

    public void RenameDinosaur()
    {
        wantsToRename = !wantsToRename;
    }
}
