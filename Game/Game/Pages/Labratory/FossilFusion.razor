@page "/labratory/fusion"
@using Game.Data;
@using Game.Data.Dinosaurs;
@using Game.Data.Fossils;
@using Game.Pages.Components.DinosaurComponents
@using Game.Services;
@inject NavigationManager NavigationManager
@inject IFusionService FusionService
@inject IPlayerFossilService FossilService
@inject IDinosaurService DinosaurService

<h3>Labratory</h3>
<img src="images/lab.png" />

@if (shortResources)
{
    <div class="alert alert-danger" role="alert">
        <p>Fossil requirement not met! Crack open more <b><i>Amber</i></b> to find fossils.</p>
        <button class="btn btn-danger" @onclick="RedirectToFossil">Get More Fossils</button>
    </div>
}

@if (newRaptorCreated)
{
    <h2>New @newDinosaur.DinosaurType Created!!!</h2>
    <DinosaurBaseInfo Dinosaur="newDinosaur"/>
    <button class="btn btn-primary" @onclick="() => AddDinosaur(newDinosaur)">Add to Party</button>
    <button class="btn btn-primary" @onclick="DismissDinosaur">Dismiss</button>
}

<div style="text-align:center; float:left">
    <p>Fossils Needed to Fuse Raptor:</p>
    <p>
        @if (clawCount >= newDinosaur.DinosaurCost.Claw)
        {
            <span class="oi oi-circle-check"></span>
        }
        Claws: @clawCount/@newDinosaur.DinosaurCost.Claw
    </p>
    <p>
        @if (skullCount >= @newDinosaur.DinosaurCost.Skull)
        {
            <span class="oi oi-circle-check"></span>
        }

        Skull: @skullCount/@newDinosaur.DinosaurCost.Skull
    </p>
    <p>
        @if (footCount >= newDinosaur.DinosaurCost.Foot)
        {
            <span class="oi oi-circle-check"></span>
        }
        Feet: @footCount/@newDinosaur.DinosaurCost.Foot
    </p>
    <p>
        @if (ribCount >= newDinosaur.DinosaurCost.Rib)
        {
            <span class="oi oi-circle-check"></span>
        }
        Ribs: @ribCount/@newDinosaur.DinosaurCost.Rib
    </p>

    @if (maxPartySize)
    {
        <div class="alert alert-danger" role="alert">
            <p>Max Party Size Reached!</p>
            <button class="btn btn-danger" @onclick="RedirectToParty">Go to Party</button>
        </div>
    }

    <button class="btn btn-primary" @onclick="FuseRaptorFossils">Fuse Raptor</button>
    <button class="btn btn-primary" @onclick="RedirectToLab">Back to the Labratory</button>
</div>

@code {
    [CascadingParameter]
    public Player player { get; set; }

    public bool newRaptorCreated = false;
    public bool shortResources = false;
    public bool maxPartySize = false;
    public int clawCount = 0;
    public int skullCount = 0;
    public int footCount = 0;
    public int ribCount = 0;
    Dinosaur newDinosaur = new Dinosaur();

    protected override async Task OnInitializedAsync()
    {
        maxPartySize = false;
        shortResources = false;
        GetRaptorFossilCount(player);
    }

    private void FuseRaptorFossils()
    {
        if (player.Dinosaurs.Count >= player.MaxPartySize)
        {
            maxPartySize = true;
            return;
        }

        if (FusionService.HasResourcesToMakeDinosaur(player, newDinosaur))
        {
            shortResources = false;
            newDinosaur = DinosaurService.GetNewDinosaur(DinosaurTypeEnum.Raptor, player);
            newRaptorCreated = true;
            player = FossilService.RemoveFossils(player, newDinosaur);
            //player.Dinosaurs.Add(dinosaur);
            //player.Access.Party = true;
            //player.Access.AmberHunting = true;
            GetRaptorFossilCount(player);
        }
        else
        {
            shortResources = true;
        }
    }

    public void AddDinosaur(Dinosaur dinosaur)
    {
        player.Dinosaurs.Add(dinosaur);
        player.Access.Party = true;
        player.Access.AmberHunting = true;
        newRaptorCreated = false;
    }

    public void DismissDinosaur()
    {
        newRaptorCreated = false;
    }

    public void GetRaptorFossilCount(Player player)
    {
        clawCount = 0;
        skullCount = 0;
        footCount = 0;
        ribCount = 0;

        foreach (var fossil in player.Fossils)
        {
            if (fossil.DinosaurType == DinosaurTypeEnum.Raptor)
            {
                if (fossil.FossilType == FossilType.Claw)
                    clawCount++;
                if (fossil.FossilType == FossilType.Ribs)
                    ribCount++;
                if (fossil.FossilType == FossilType.Skull)
                    skullCount++;
                if (fossil.FossilType == FossilType.Foot)
                    footCount++;
            }
        }
    }

    private void RedirectToFossil()
    {
        NavigationManager.NavigateTo("/labratory/splicer");
    }

    private void RedirectToParty()
    {
        NavigationManager.NavigateTo("/party");
    }

    private void ExchangeFossils()
    {
        NavigationManager.NavigateTo("/labratory/exchange");
    }

    private void RedirectToLab()
    {
        NavigationManager.NavigateTo("/labratory");
    }
}
