@page "/party"
@using Game.Data;
@using Game.Services;
@inject IPlayerMonsterService PlayerMonsters
@inject IMonsterCreationService MonsterCreation

<div style="text-align:center; padding: 10px">
    <h1><b>Party</b></h1>
    <p>Party size: @player.Monsters.Count()/@player.MaxPartySize</p>

    @foreach (var teamMember in player.Monsters)
    {
        <div class="card" style="float:left">
            @if (!teamMember.Locked)
            {
                <h3><b>@teamMember.Name</b> </h3>
            }
            else
            {
                <h3><b>@teamMember.Name</b></h3>
                <span class="oi oi-lock-locked">  Locked</span>
            }
            <MonsterSummary monster="@teamMember"></MonsterSummary>
            <button class="btn btn-primary" @onclick="() => LockMonster(teamMember)" value="@teamMember">Lock</button>
            <button class="btn btn-danger" @onclick="() => RemoveMonster(teamMember)">Remove</button>
        </div>
    }

</div>

@code {
    [CascadingParameter]
    public Player player { get; set; }

    public void LockMonster(Monster monster)
    {
        monster = MonsterCreation.LockOrUnlockMonster(monster);
    }

    public void RemoveMonster(Monster monster)
    {
        player = PlayerMonsters.RemoveMonster(player, monster);
    }
}

<style>
    .card {
        box-shadow: 0 4px 16px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
        width: 40%;
        border-radius: 5px;
    }

        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
        }

    img {
        border-radius: 5px 5px 0 0;
    }

    .container {
        padding: 2px 16px;
    }
</style>
